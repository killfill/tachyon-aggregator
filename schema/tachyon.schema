%% -*- erlang -*-
%% @doc Erlang NSQ client.

%% @doc The topic to use.
{mapping, "channel", "tachyon.channel",
 [{default, "aggregator"},
  {datatype, string}]}.

%% @doc the NSQ topic on which JSON metrics are received
{mapping, "metric.json_topic", "tachyon.metric_json_topic",
 [{default, "tachyon-metrics-json"},
  {datatype, string}]}.

%% @doc the NSQ topic on which binary metrics are received
{mapping, "metric.bin_topic", "tachyon.metric_bin_topic",
 [{default, "tachyon-metrics-bin"},
  {datatype, string}]}.

%% @doc The number of connections used to receive general metrics
{mapping, "metric.connections", "tachyon.metric_connections",
 [{default, 5},
  {datatype, integer}]}.

%% @doc the NSQ topic on which kstat binary metrics are received
{mapping, "kstat.topic", "tachyon.kstat_topic",
 [{default, "tachyon-metrics-bin"},
  {datatype, string}]}.

%% @doc The number of connections used to receive kstat metrics
{mapping, "kstat.connections", "tachyon.kstat_connections",
 [{default, 10},
  {datatype, integer}]}.

%% @doc The kairosdb endpoint to use, if not set no data will be written
%% to kairosdb.
{mapping, "kairosdb", "tachyon.kairosdb",
 [{commented, {"127.0.0.1", 4242}},
  {datatype, ip}]}.

%% @doc The kairosdb endpoint to use, if not set no data will be written
%% to kairosdb.
{mapping, "kairosdb.buffer_size", "tachyon.kairosdb_buffer_size",
 [{default, 100},
  {datatype, integer}]}.

%% @doc The kairosdb endpoint to use, if not set no data will be written
%% to kairosdb.
{mapping, "statsd.buffer_size", "tachyon.statsd_buffer_size",
 [{default, 100},
  {datatype, integer}]}.

%% @doc Enable or disable writing to statsd.
{mapping, "statsd", "tachyon.statsd",
 [{commented, {"127.0.0.1", 4242}},
  {datatype, ip}]}.

{translation,
 "estatsd.graphite",
 fun(Conf) ->
         cuttlefish:conf_get("statsd", Conf, {"127.0.0.1", 2003})
 end
}.

%% @doc The MetricDB backend (if used).
{mapping, "metricdb", "tachyon.metricdb",
 [{commented, {"127.0.0.1", 4444}},
  {datatype, ip}]}.


%% @doc One more more nsqlookupd http interfaces for tachyon to discover
%% the channels.

{mapping, "nsqlookupd.$name", "tachyon.nsqlookupd",
 [{default, {"127.0.0.1", 4161}},
  {datatype, ip}]}.

{translation,
 "tachyon.nsqlookupd",
 fun(Conf) ->
         HTTP = cuttlefish_variable:filter_by_prefix("nsqlookupd", Conf),
         [ IP || {_, IP} <- HTTP]
 end
}.
